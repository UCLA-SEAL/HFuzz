var areaJSON={"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[50.5866, 26.3398, 25.8259, 29.0334, 22.5], "total":[490964, 963946, 3403, 1296, 30], "name":"Kernel System", "max_resources":[1866240, 3732480, 11721, 5760, 93312], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[466792, 928428, 3039, 1291, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[13691, 19807, 78, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"brief", "text":"For 2 global loads and 1 global store."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/hnj1476724450050.html"}]}]}, {"name":"System description ROM", "type":"resource", "data":[2, 71, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"Pipe resources", "type":"group", "children":[{"name":"Pipe (cl::sycl::ext::intel::pipe<ProducerConsumerPipe, int, 4>)", "type":"resource", "data":[23, 172, 0, 0, 0], "details":[{"type":"text", "text":"Pipe is implemented 32 bits wide by 4 deep."}, {"type":"brief", "text":"32b wide by 4 deep."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/qah1476410829821.html"}]}]}]}, {"name":"ConsumerTutorial", "compute_units":1, "type":"function", "total_percent":[0.262066, 0.152231, 0.121715, 0.145039, 0.0347222], "total_kernel_resources":[2541, 4543, 17, 1.5, 15], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"brief", "text":"1 compute unit."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1463, 1467, 0, 0, 6], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Coalesced Private Variables: \\n - \'LinearIndex\' (accessor.hpp:1726)\\n - \'i\' (twokernel.cpp:69)", "type":"resource", "data":[40, 130, 0, 0, 0], "debug":[[{"filename":"accessor.hpp", "line":1726}], [{"filename":"twokernel.cpp", "line":69}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 65 bits"}, {"type":"brief", "text":"Register,\\n1 reg, 65 width"}]}, {"name":"Private Variable: \\n - \'i\' (twokernel.cpp:69)", "type":"resource", "data":[8, 128, 0, 0, 0], "debug":[[{"filename":"twokernel.cpp", "line":69}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 64 bits"}, {"type":"brief", "text":"Register,\\n1 reg, 64 width"}]}, {"name":"ConsumerTutorial.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2, 133, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[2, 67, 0, 0, 0]}, {"name":"handler.hpp:1089 > twokernel.cpp:69", "type":"resource", "data":[0, 66, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1089}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":69}]]}]}, {"name":"Feedback", "type":"resource", "data":[7, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[7, 2, 0, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[10, 8, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"handler.hpp:1089 > twokernel.cpp:69", "type":"resource", "data":[152, 65, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1089}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":69}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":2, "data":[88, 1, 0, 0, 0]}, {"name":"64-bit Select", "type":"resource", "count":1, "data":[64, 64, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"ConsumerTutorial.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[45, 230, 0, 0, 1], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[45, 230, 0, 0, 1]}]}, {"name":"Feedback", "type":"resource", "data":[145, 9, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"handler.hpp:1089 > twokernel.cpp:69", "type":"resource", "data":[145, 9, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1089}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":69}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[85, 125, 0, 0, 7], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"handler.hpp:1089 > twokernel.cpp:69", "type":"resource", "data":[134, 66, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1089}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":69}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"65-bit Integer Compare", "type":"resource", "count":1, "data":[68, 1, 0, 0, 0]}, {"name":"65-bit Select", "type":"resource", "count":1, "data":[65, 65, 0, 0, 0]}], "replace_name":"true"}, {"name":"handler.hpp:1089 > twokernel.cpp:71 > \\npipes.hpp:68", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1089}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":71}, {"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/ext/intel/pipes.hpp", "line":68}]], "children":[{"name":"Pipe Read", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"handler.hpp:1089 > twokernel.cpp:74 > \\ntwokernel.cpp:57", "type":"resource", "data":[54, 44, 0, 1.5, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1089}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":74}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":57}]], "children":[{"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[54, 44, 0, 1.5, 0]}], "replace_name":"true"}, {"name":"handler.hpp:1089 > twokernel.cpp:77", "type":"resource", "data":[390, 2128, 17, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1089}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":77}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[390, 2128, 17, 0, 0], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}]}]}, {"name":"ConsumerTutorial.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"handler.hpp:1093", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1093}]]}]}]}]}, {"name":"ProducerTutorial", "compute_units":1, "type":"function", "total_percent":[0.692611, 0.44019, 0.292701, 2.27796, 0.0520833], "total_kernel_resources":[7915, 10925, 267, 3, 15], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"brief", "text":"1 compute unit."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1463, 1467, 0, 0, 6], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"ProducerTutorial.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[104, 589, 1, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[104, 589, 1, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[101, 177, 0, 0, 9], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"handler.hpp:1122 > twokernel.cpp:44", "type":"resource", "data":[163, 92, 0, 3, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1122}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":44}]], "children":[{"name":"32-bit Integer Multiply", "type":"resource", "count":2, "data":[110, 92, 0, 3, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[21, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"handler.hpp:1122 > twokernel.cpp:45", "type":"resource", "data":[6080, 8598, 266, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1122}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":45}]], "children":[{"name":"Load", "type":"resource", "count":2, "data":[6080, 8598, 266, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"handler.hpp:1122 > twokernel.cpp:47 > \\npipes.hpp:83", "type":"resource", "data":[4, 2, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1122}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":47}, {"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/ext/intel/pipes.hpp", "line":83}]], "children":[{"name":"Pipe Write", "type":"resource", "count":1, "data":[4, 2, 0, 0, 0]}], "replace_name":"true"}]}]}]}]};
var area_srcJSON={"children":[{"children":[{"data":[466792,928428,3039,1291,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[13691,19807,78,0,0],"details":[{"text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"For 2 global loads and 1 global store.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/hnj1476724450050.html"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[2,71,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[23,172,0,0,0],"details":[{"text":"Pipe is implemented 32 bits wide by 4 deep.","type":"text"},{"text":"32b wide by 4 deep.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Channels","link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/qah1476410829821.html"}],"text":"See %L for more information","type":"text"}],"name":"Pipe (cl::sycl::ext::intel::pipe<ProducerConsumerPipe, int, 4>)","type":"resource"}],"data":[23,172,0,0,0],"name":"Pipe resources","type":"group"},{"children":[{"data":[252,152,0,0,8],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1463,1467,0,0,6],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[40,130,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 65 bits","type":"text"},{"text":"Register,\\n1 reg, 65 width","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'LinearIndex\' (accessor.hpp:1726)\\n - \'i\' (twokernel.cpp:69)","type":"resource"},{"data":[8,128,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 64 bits","type":"text"},{"text":"Register,\\n1 reg, 64 width","type":"brief"}],"name":"Private Variable: \\n - \'i\' (twokernel.cpp:69)","type":"resource"},{"children":[{"count":2,"data":[47,297,0,0,1],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[47,297,0,0,1],"name":"No Source Line","type":"resource"},{"children":[{"children":[{"count":"1","data":[0,66,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"State","type":"resource"},{"count":2,"data":[88,1,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"64-bit Integer Compare","type":"resource"},{"count":1,"data":[64,64,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"64-bit Select","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[68,1,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"65-bit Integer Compare","type":"resource"},{"count":1,"data":[65,65,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"65-bit Select","type":"resource"}],"data":[286,197,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1089},{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp","line":69}]],"name":"handler.hpp:1089 > twokernel.cpp:69","replace_name":true,"type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"Pipe Read","type":"resource"}],"data":[1,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1089},{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp","line":71},{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/ext/intel/pipes.hpp","line":68}]],"name":"handler.hpp:1089 > twokernel.cpp:71 > \\npipes.hpp:68","replace_name":true,"type":"resource"},{"children":[{"count":1,"data":[54,44,0,1.5,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"32-bit Integer Multiply","type":"resource"}],"data":[54,44,0,1.5,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1089},{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp","line":74},{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp","line":57}]],"name":"handler.hpp:1089 > twokernel.cpp:74 > \\ntwokernel.cpp:57","replace_name":true,"type":"resource"},{"children":[{"count":1,"data":[390,2128,17,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1089"}]],"name":"Store","type":"resource"}],"data":[390,2128,17,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1089},{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp","line":77}]],"name":"handler.hpp:1089 > twokernel.cpp:77","replace_name":true,"type":"resource"}],"data":[731,2369,17,1.5,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1089}]],"name":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp:1089","type":"resource"}],"compute_units":1,"data":[2541,4543,17,1.5,15],"debug":[[{"filename":"twokernel.cpp","line":69}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"1 compute unit.","type":"brief"}],"name":"ConsumerTutorial","total_kernel_resources":[2541,4543,17,1.5,15],"total_percent":[0.262066,0.152231,0.121715,0.145039,0.0347222],"type":"function"},{"children":[{"data":[101,177,0,0,9],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1463,1467,0,0,6],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"children":[{"count":"1","data":[104,589,1,0,0],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[104,589,1,0,0],"name":"No Source Line","type":"resource"},{"children":[{"children":[{"count":2,"data":[110,92,0,3,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1122"}]],"name":"32-bit Integer Multiply","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1122"}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[21,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1122"}]],"name":"64-bit Integer Compare","type":"resource"}],"data":[163,92,0,3,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1122},{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp","line":44}]],"name":"handler.hpp:1122 > twokernel.cpp:44","replace_name":true,"type":"resource"},{"children":[{"count":2,"data":[6080,8598,266,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1122"}]],"name":"Load","type":"resource"}],"data":[6080,8598,266,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1122},{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp","line":45}]],"name":"handler.hpp:1122 > twokernel.cpp:45","replace_name":true,"type":"resource"},{"children":[{"count":1,"data":[4,2,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"1122"}]],"name":"Pipe Write","type":"resource"}],"data":[4,2,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1122},{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp","line":47},{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/ext/intel/pipes.hpp","line":83}]],"name":"handler.hpp:1122 > twokernel.cpp:47 > \\npipes.hpp:83","replace_name":true,"type":"resource"}],"data":[6247,8692,266,3,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":1122}]],"name":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp:1122","replace_name":"true","type":"resource"}],"compute_units":1,"data":[7915,10925,267,3,15],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"1 compute unit.","type":"brief"}],"name":"ProducerTutorial","total_kernel_resources":[7915,10925,267,3,15],"total_percent":[0.692611,0.44019,0.292701,2.27796,0.0520833],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[24172,35518,364,4.5,30],"debug_enabled":"true","max_resources":[1866240,3732480,11721,5760,93312],"name":"Kernel System","total":[490964,963946,3403,1296,30],"total_percent":[50.5866,26.3398,25.8259,29.0334,22.5],"type":"module"};
var mavJSON={"nodes":[{"type":"kernel", "id":2, "name":"ConsumerTutorial", "children":[{"type":"bb", "id":3, "name":"ConsumerTutorial.B0", "details":[{"type":"table", "Latency":"9"}]}, {"type":"bb", "id":4, "name":"ConsumerTutorial.B1", "children":[{"type":"inst", "id":6, "name":"Pipe Read", "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/ext/intel/pipes.hpp", "line":68}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"4", "Stall-free":"No", "Start Cycle":"9", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/qah1476410829821.html"}]}]}]}, {"type":"inst", "id":8, "name":"Store", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":77}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"20", "Latency":"2", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":9, "name":"Loop Input", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":69}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"10"}]}, {"type":"inst", "id":10, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"22", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"22", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":5, "name":"ConsumerTutorial.B2", "details":[{"type":"table", "Latency":"0"}]}, {"type":"csr", "id":11, "name":"Register Map", "debug":[[{"filename":"s10.prj/k0_ZTS16ConsumerTutorial_csr.hpp", "line":1}]], "children":[{"type":"interface", "id":12, "name":"start", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]]}, {"type":"interface", "id":13, "name":"done", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]]}, {"type":"interface", "id":14, "name":"busy", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]]}, {"type":"interface", "id":15, "name":"arg_num_elements", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k0_ZTS16ConsumerTutorial"}]}, {"type":"interface", "id":16, "name":"arg_out_accessor", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k0_ZTS16ConsumerTutorial"}]}, {"type":"interface", "id":17, "name":"arg_out_accessor1", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k0_ZTS16ConsumerTutorial"}]}, {"type":"interface", "id":18, "name":"arg_out_accessor2", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k0_ZTS16ConsumerTutorial"}]}, {"type":"interface", "id":19, "name":"arg_out_accessor3", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k0_ZTS16ConsumerTutorial"}]}]}]}, {"type":"kernel", "id":21, "name":"ProducerTutorial", "children":[{"type":"bb", "id":22, "name":"ProducerTutorial.B0", "children":[{"type":"inst", "id":23, "name":"Load", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":45}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"7", "Latency":"805", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":24, "name":"Load", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":45}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"7", "Latency":"805", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":25, "name":"Pipe Write", "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/ext/intel/pipes.hpp", "line":83}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"4", "Stall-free":"No", "Start Cycle":"833", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/qah1476410829821.html"}]}]}]}, {"type":"inst", "id":26, "name":"Begin", "details":[{"type":"table", "Start Cycle":"0", "Latency":"1"}]}, {"type":"inst", "id":27, "name":"End", "details":[{"type":"table", "Start Cycle":"833", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"833"}]}, {"type":"csr", "id":28, "name":"Register Map", "debug":[[{"filename":"s10.prj/k1_ZTS16ProducerTutorial_csr.hpp", "line":1}]], "children":[{"type":"interface", "id":29, "name":"start", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]]}, {"type":"interface", "id":30, "name":"done", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]]}, {"type":"interface", "id":31, "name":"busy", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]]}, {"type":"interface", "id":32, "name":"arg_num_elements", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}, {"type":"interface", "id":33, "name":"arg_input_accessor", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}, {"type":"interface", "id":34, "name":"arg_input_accessor1", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}, {"type":"interface", "id":35, "name":"arg_input_accessor2", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}, {"type":"interface", "id":36, "name":"arg_input_accessor3", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}, {"type":"interface", "id":37, "name":"arg_input2_accessor", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}, {"type":"interface", "id":38, "name":"arg_input2_accessor4", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}, {"type":"interface", "id":39, "name":"arg_input2_accessor5", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}, {"type":"interface", "id":40, "name":"arg_input2_accessor6", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial"}]}]}, {"type":"interface", "id":41, "name":"__acl_global_size_0", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_size_0"}]}, {"type":"interface", "id":42, "name":"__acl_global_size_1", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_size_1"}]}, {"type":"interface", "id":43, "name":"__acl_global_size_2", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_size_2"}]}, {"type":"interface", "id":44, "name":"__acl_global_id_0", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_id_0"}]}, {"type":"interface", "id":45, "name":"__acl_global_id_1", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_id_1"}]}, {"type":"interface", "id":46, "name":"__acl_global_id_2", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_id_2"}]}, {"type":"interface", "id":47, "name":"__acl_global_offset_0", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_offset_0"}]}, {"type":"interface", "id":48, "name":"__acl_global_offset_1", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_offset_1"}]}, {"type":"interface", "id":49, "name":"__acl_global_offset_2", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_offset_2"}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":20, "name":"DDR", "details":[{"type":"table", "Number of banks":"4"}]}]}, {"type":"pipe", "id":7, "name":"cl::sycl::ext::intel::pipe<ProducerConsumerPipe, int, 4>", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"4"}]}, {"type":"interface", "id":44, "name":"__acl_global_id_0", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_id_0"}]}, {"type":"interface", "id":45, "name":"__acl_global_id_1", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_id_1"}]}, {"type":"interface", "id":46, "name":"__acl_global_id_2", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_id_2"}]}, {"type":"interface", "id":47, "name":"__acl_global_offset_0", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_offset_0"}]}, {"type":"interface", "id":48, "name":"__acl_global_offset_1", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_offset_1"}]}, {"type":"interface", "id":49, "name":"__acl_global_offset_2", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_offset_2"}]}, {"type":"interface", "id":41, "name":"__acl_global_size_0", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_size_0"}]}, {"type":"interface", "id":42, "name":"__acl_global_size_1", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_size_1"}]}, {"type":"interface", "id":43, "name":"__acl_global_size_2", "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"table", "Stable":"No", "Width":"64 bits", "Kernel":"k1_ZTS16ProducerTutorial", "Port Name":"k1_ZTS16ProducerTutorial___acl_global_size_2"}]}], "links":[{"from":7, "to":6}, {"from":12, "to":3}, {"from":5, "to":13}, {"from":3, "to":14, "reverse":2}, {"from":15, "to":3}, {"from":16, "to":9}, {"from":19, "to":9}, {"from":10, "to":9}, {"from":3, "to":9}, {"from":6, "to":10}, {"from":8, "to":10}, {"from":10, "to":5}, {"from":9, "to":6}, {"from":6, "to":8}, {"from":8, "to":20}, {"from":25, "to":7}, {"from":29, "to":26}, {"from":27, "to":30}, {"from":26, "to":31, "reverse":2}, {"from":32, "to":26}, {"from":33, "to":26}, {"from":36, "to":26}, {"from":37, "to":26}, {"from":40, "to":26}, {"from":44, "to":26}, {"from":45, "to":26}, {"from":23, "to":27}, {"from":24, "to":27}, {"from":25, "to":27}, {"from":26, "to":23}, {"from":26, "to":24}, {"from":23, "to":25}, {"from":24, "to":25}, {"from":20, "to":23}, {"from":20, "to":24}]};
var loopsJSON={"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: ConsumerTutorial", "data":["", "", ""], "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":68}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"fMAX bottleneck block: ConsumerTutorial.B1"}, {"type":"text", "text":"Use the %L report to view more details", "links":[{"view":"Fmax II Report"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/ipp1476408832230.html"}]}], "children":[{"name":"ConsumerTutorial.B1", "data":["Yes", "~1", "5"], "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":69}]], "details":[{"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Pipe Read Operation (%L > %L > %L)", "links":[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":"1089"}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":"71"}, {"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/ext/intel/pipes.hpp", "line":"68"}]}, {"type":"text", "text":"Store Operation (%L > %L)", "links":[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":"1089"}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":"77"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/wfa1476380079940.html"}]}], "children":[]}]}, {"name":"Kernel: ProducerTutorial", "data":["", "", ""], "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":42}]], "details":[{"type":"brief", "text":"ND-Range"}, {"type":"text", "text":"ND-Range"}, {"type":"text", "text":"fMAX bottleneck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"file:////glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/lib/oclfpga/aoc_help_pages/ipp1476408832230.html"}]}]}]};
var loop_attrJSON={"name":"loop_attributes", "id":75, "nodes":[{"name":"ConsumerTutorial", "id":1, "clk":"No", "fmax":"480.00", "type":"kernel", "children":[{"name":"ConsumerTutorial.B0", "id":3, "af":"480.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"9.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}, {"name":"ConsumerTutorial.B1", "id":4, "af":"432.00", "br":"1", "ci":"0", "fo":"Enabled", "ii":"1", "ll":"1", "lt":"22.000000", "mi":"1", "pl":"Yes", "tc":"0", "tn":"1", "details":[{"type":"text", "text":"Hyper-Optimized loop structure: enabled."}], "debug":[[{"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":69}]], "type":"loop"}, {"name":"ConsumerTutorial.B2", "id":5, "af":"480.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"1.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}]}, {"name":"ProducerTutorial", "id":2, "clk":"No", "fmax":"480.00", "type":"kernel", "children":[{"name":"ProducerTutorial.B0", "id":6, "af":"480.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"833.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}]}]};
var summaryJSON={"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units", "Hyper-Optimized Handshaking"], "children":[{"name":"ConsumerTutorial", "data":["Single work-item", "No", [1, 1, 1], 1, "Off"], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}, {"type":"text", "text":"Hyper-optimized handshaking disabled due to instruction in Kernel k1_ZTS16ProducerTutorial"}], "debug":[[{"filename":"", "line":0}]]}, {"name":"ProducerTutorial", "data":["NDRange", "No", "n/a", 1, "Off"], "details":[{"type":"text", "text":"Kernel type: NDRange"}, {"type":"text", "text":"Hyper-optimized handshaking disabled due to instruction Load Operation which does not support it."}], "debug":[[{"filename":"", "line":0}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"ConsumerTutorial", "data":[2541, 4543, 17, 1.5, 15], "debug":[[{"filename":"", "line":0}]]}, {"name":"ProducerTutorial", "data":[7915, 10925, 267, 3, 15], "debug":[[{"filename":"", "line":0}]]}, {"name":"Kernel Subtotal", "classes":["summary-highlight", "nohover"], "data":[10456, 15468, 284, 4, 30]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[13691, 19807, 78, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[466792, 928428, 3039, 1291, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[2, 71, 2, 0, 0]}, {"name":"Pipe resources", "classes":["summary-highlight", "nohover"], "data":[23, 172, 0, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[490964, 963946, 3403, 1295, 30], "data_percent":[26.3077, 25.8259, 29.0334, 22.5]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[1866240, 3732480, 11721, 5760, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[{"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1122}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":45}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.3/oneapi/compiler/2022.2.0/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":1122}, {"filename":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "line":45}]]}]}};
var warningsJSON={"nodes":[]};
var fileJSON=[{"path":"/glob/development-tools/versions/oneapi/2022.3/oneapi/dev-utilities/2021.7.0/include/dpc_common.hpp", "name":"dpc_common.hpp", "has_active_debug_locs":false, "absName":"/glob/development-tools/versions/oneapi/2022.3/oneapi/dev-utilities/2021.7.0/include/dpc_common.hpp", "content":"// Copyright (C) 2020 Intel Corporation\u000A// SPDX-License-Identifier: MIT\u000A\u000A#ifndef _DP_HPP\u000A#define _DP_HPP\u000A\u000A#include <stdlib.h>\u000A#include <exception>\u000A\u000A#include <CL/sycl.hpp>\u000A\u000Anamespace dpc_common {\u000A// This exception handler will catch async exceptions\u000Astatic auto exception_handler = [](cl::sycl::exception_list eList) {\u000A  for (std::exception_ptr const &e : eList) {\u000A    try {\u000A      std::rethrow_exception(e);\u000A    } catch (std::exception const &e) {\u000A#if _DEBUG\u000A      std::cout << \"Failure\" << std::endl;\u000A#endif\u000A      std::terminate();\u000A    }\u000A  }\u000A};\u000A\u000A// The TimeInterval is a simple RAII class.\u000A// Construct the timer at the point you want to start timing.\u000A// Use the Elapsed() method to return time since construction.\u000A\u000Aclass TimeInterval {\u000A public:\u000A  TimeInterval() : start_(std::chrono::steady_clock::now()) {}\u000A\u000A  double Elapsed() {\u000A    auto now = std::chrono::steady_clock::now();\u000A    return std::chrono::duration_cast<Duration>(now - start_).count();\u000A  }\u000A\u000A private:\u000A  using Duration = std::chrono::duration<double>;\u000A  std::chrono::steady_clock::time_point start_;\u000A};\u000A\u000A};  // namespace dpc_common\u000A\u000A#endif\u000A"}, {"path":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "name":"twokernel.cpp", "has_active_debug_locs":false, "absName":"/home/u93631/A10_oneapi/2kernels/src/twokernel.cpp", "content":"//==============================================================\u000A// Copyright ext::intel Corporation\u000A//\u000A// SPDX-License-Identifier: MIT\u000A// =============================================================\u000A#include <iomanip>\u000A#include <iostream>\u000A#include <numeric>\u000A#include <vector>\u000A\u000A#include <CL/sycl.hpp>\u000A#include  <sycl/ext/intel/fpga_extensions.hpp>\u000A\u000A// dpc_common.hpp can be found in the dev-utilities include folder.\u000A// e.g., $ONEAPI_ROOT/dev-utilities//include/dpc_common.hpp\u000A#include \"dpc_common.hpp\"\u000A\u000A\u000Ausing namespace sycl;\u000A\u000Ausing ProducerToConsumerPipe = ext::intel::pipe<  // Defined in the SYCL headers.\u000A    class ProducerConsumerPipe,              // An identifier for the pipe.\u000A    int,                                     // The type of data in the pipe.\u000A    4>;                                      // The capacity of the pipe.\u000A\u000A// Forward declare the kernel names in the global scope.\u000A// This FPGA best practice reduces name mangling in the optimization reports.\u000Aclass ProducerTutorial;\u000Aclass ConsumerTutorial;\u000A\u000A// The Producer kernel reads data from a SYCL buffer and writes it to\u000A// a pipe. This transfers the input data from the host to the Consumer kernel\u000A// that is running concurrently.\u000Aevent Producer(queue &q, buffer<int, 1> &input_buffer,buffer<int, 1> &input2_buffer) {\u000A  std::cout << \"Enqueuing producer...\\n\";\u000A\u000A  auto e = q.submit([&](handler &h) {\u000A    accessor input_accessor(input_buffer, h, read_only);\u000A    accessor input2_accessor(input2_buffer, h, read_only);\u000A    size_t num_elements = input_buffer.get_count();\u000A\u000A    h.parallel_for<ProducerTutorial>(range(num_elements,num_elements), [=](auto index) {\u000A      size_t sum=0;\u000A      for (size_t i = 0; i < num_elements; ++i) {\u000A        sum += input_accessor[index[0]]*input2_accessor[index[1]];\u000A      }\u000A      ProducerToConsumerPipe::write(sum);\u000A    });\u000A  });\u000A\u000A  return e;\u000A}\u000A\u000A\u000A// An example of some simple work, to be done by the Consumer kernel\u000A// on the input data\u000Aint ConsumerWork(int i) { return i * i; }\u000A\u000A// The Consumer kernel reads data from the pipe, performs some work\u000A// on the data, and writes the results to an output buffer\u000Aevent Consumer(queue &q, buffer<int, 1> &out_buf) {\u000A  std::cout << \"Enqueuing consumer...\\n\";\u000A\u000A  auto e = q.submit([&](handler &h) {\u000A    accessor out_accessor(out_buf, h, write_only, noinit);\u000A    size_t num_elements = out_buf.get_count();\u000A\u000A    h.single_task<ConsumerTutorial>([=]() {\u000A      for (size_t i = 0; i < num_elements; ++i) {\u000A        // read the input from the pipe\u000A        int input = ProducerToConsumerPipe::read();\u000A\u000A        // do work on the input\u000A        int answer = ConsumerWork(input);\u000A\u000A        // write the result to the output buffer\u000A        out_accessor[i] = answer;\u000A      }\u000A    });\u000A  });\u000A\u000A  return e;\u000A}\u000A\u000Aint main(int argc, char *argv[]) {\u000A  // Default values for the buffer size is based on whether the target is the\u000A  // FPGA emulator or actual FPGA hardware\u000A#if defined(FPGA_EMULATOR)\u000A  size_t array_size = 1 << 12;\u000A#else\u000A  size_t array_size = 1 << 20;\u000A#endif\u000A  \u000A  // allow the user to change the buffer size at the command line\u000A  if (argc > 1) {\u000A    std::string option(argv[1]);\u000A    if (option == \"-h\" || option == \"--help\") {\u000A      std::cout << \"Usage: \\n./pipes <data size>\\n\\nFAILED\\n\";\u000A      return 1;\u000A    } else {\u000A      array_size = atoi(argv[1]);\u000A    }\u000A  }\u000A\u000A  std::cout << \"Input Array Size: \" << array_size << \"\\n\";\u000A\u000A  std::vector<int> producer_input(array_size, -1);\u000A  std::vector<int> producer_input2(array_size, -1);\u000A  std::vector<int> consumer_output(array_size, -1);\u000A\u000A  // Initialize the input data with numbers from 0, 1, 2, ..., array_size-1\u000A  std::iota(producer_input.begin(), producer_input.begin(), 0);\u000A  std::iota(producer_input2.begin(), producer_input2.begin(), 0);\u000A#if defined(FPGA_EMULATOR)\u000A  ext::intel::fpga_emulator_selector device_selector;\u000A#else\u000A  ext::intel::fpga_selector device_selector;\u000A#endif\u000A\u000A  event producer_event, consumer_event;\u000A\u000A  try {\u000A    // property list to enable SYCL profiling for the device queue\u000A    auto props = property_list{property::queue::enable_profiling()};\u000A\u000A    // create the device queue with SYCL profiling enabled\u000A    queue q(device_selector, dpc_common::exception_handler, props);\u000A\u000A    // create the \u000A    buffer producer_buffer(producer_input);\u000A    buffer producer2_buffer(producer_input2);\u000A    buffer consumer_buffer(consumer_output);\u000A\u000A    // Run the two kernels concurrently. The Producer kernel sends\u000A    // data via a pipe to the Consumer kernel.\u000A    producer_event = Producer(q, producer_buffer, producer2_buffer);\u000A    consumer_event = Consumer(q, consumer_buffer);\u000A\u000A  } catch (exception const &e) {\u000A    // Catches exceptions in the host code\u000A    std::cerr << \"Caught a SYCL host exception:\\n\" << e.what() << \"\\n\";\u000A\u000A    // Most likely the runtime couldn't find FPGA hardware!\u000A    if (e.get_cl_code() == CL_DEVICE_NOT_FOUND) {\u000A      std::cerr << \"If you are targeting an FPGA, please ensure that your \"\u000A                   \"system has a correctly configured FPGA board.\\n\";\u000A      std::cerr << \"Run sys_check in the oneAPI root directory to verify.\\n\";\u000A      std::cerr << \"If you are targeting the FPGA emulator, compile with \"\u000A                   \"-DFPGA_EMULATOR.\\n\";\u000A    }\u000A    std::terminate();\u000A  }\u000A\u000A  // At this point, the producer_buffer and consumer_buffer have gone out \u000A  // of scope. This will cause their destructors to be called, which will in \u000A  // turn block until the Producer and Consumer kernels are finished and the\u000A  // output data is copied back to the host. Therefore, at this point it is\u000A  // safe and correct to access the contents of the consumer_output vector.\u000A\u000A  // print profiling information\u000A  // alias the 'info::event_profiling' namespace to save column space\u000A  using syclprof = info::event_profiling;\u000A\u000A  // start and end time of the Producer kernel\u000A  double p_start = producer_event.get_profiling_info<syclprof::command_start>();\u000A  double p_end = producer_event.get_profiling_info<syclprof::command_end>();\u000A\u000A  // start and end time of the Consumer kernel\u000A  double c_start = consumer_event.get_profiling_info<syclprof::command_start>();\u000A  double c_end = consumer_event.get_profiling_info<syclprof::command_end>();\u000A\u000A  // the total application time\u000A  double total_time_ms = (c_end - p_start) * 1e-6;\u000A\u000A  // the input size in MBs\u000A  double input_size_mb = array_size * sizeof(int) * 1e-6;\u000A\u000A  // the total application throughput\u000A  double throughput_mbs = input_size_mb / (total_time_ms * 1e-3);\u000A\u000A  // Print the start times normalized to the start time of the producer.\u000A  // i.e. the producer starts at 0ms and the other start/end times are\u000A  // reported as differences to that number (+X ms).\u000A  std::cout << std::fixed << std::setprecision(3);\u000A  std::cout << \"\\n\";\u000A  std::cout << \"Profiling Info\\n\";\u000A  std::cout << \"\\tProducer:\\n\";\u000A  std::cout << \"\\t\\tStart time: \" << 0 << \" ms\\n\";\u000A  std::cout << \"\\t\\tEnd time: +\" << (p_end-p_start)*1e-6 << \" ms\\n\";\u000A  std::cout << \"\\t\\tKernel Duration: \" << (p_end-p_start)*1e-6 << \" ms\\n\";\u000A  std::cout << \"\\tConsumer:\\n\";\u000A  std::cout << \"\\t\\tStart time: +\" << (c_start-p_start)*1e-6 << \" ms\\n\";\u000A  std::cout << \"\\t\\tEnd time: +\" << (c_end-p_start)*1e-6 << \" ms\\n\";\u000A  std::cout << \"\\t\\tKernel Duration: \" << (c_end-c_start)*1e-6 << \" ms\\n\";\u000A  std::cout << \"\\tDesign Duration: \" << total_time_ms << \" ms\\n\";\u000A  std::cout << \"\\tDesign Throughput: \" << throughput_mbs << \" MB/s\\n\";\u000A  std::cout << \"\\n\";\u000A\u000A  // Verify the result\u000A  /*for (size_t i = 0; i < array_size; i++) {\u000A    if (consumer_output[i] != ConsumerWork(producer_input[i])) {\u000A      std::cout << \"input = \" << producer_input[i]\u000A                << \" expected: \" << ConsumerWork(producer_input[i])\u000A                << \" got: \" << consumer_output[i] << \"\\n\";\u000A      std::cout << \"FAILED: The results are incorrect\\n\";\u000A      return 1;\u000A    }\u000A  }*/\u000A  std::cout << \"PASSED: The results are correct\\n\";\u000A  return 0;\u000A}\u000A"}];
var alpha_viewer=false;